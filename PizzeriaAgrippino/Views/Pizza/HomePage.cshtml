<!--diciamo a razor che modello gli arriva, cioè una lista di pizze -->
@model List<Pizze>


<!doctype html>
<html lang="it">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <title>Agrippino's Pizza</title>
</head>
<body>
   <!--Dato che adesso abbiamo inserito il model rezor possiamo iniziare a inserire delle condizioni-->
   <!--Attraverso if controlliamo se non ci sono post, se non ci sono risponde con un h3 altirmenti carica i post presenti nell'else-->



@if(Model.Count() == 0)
    {
        <h3>Non ci sono post</h3>
    }
    else
    {
         <!--Lista di tutte le pizze, MIGLIORARE DIMENSIONE CARD E CHIEDRE DI HOVER - CHIEDRE A BRYAN -->
         <!--Questa parte dato che la inseriamo una sola volta ed è solo lìinizo di tuto la inseriamo nell'else mentre il resto nel foreach  -->
        <div class="Container-fluid justify-content-xxl-center bg-warning bg-opacity-50 ">
            <div class="row ">
             <!--Titolo cenrrale per iniziare l'elenco-->
                    <div class= "col-12-xxl mt-2 mb-4 text-center fs-1">
                    Le nostre pizze
                    </div>       
         <!--Si ripete molte volte l'inserimento della card, quindi per rednere il programma più inteligente usiamo razor che ci permette di creare un for each che legge tutte le pizze che abbiamo inserito-->
          <!-- Creiamo un bottone che servirà per aggiugnere le pizze, arriiamo un url action che ci porterà poi a al metodo CreaPizza-->
             <a type="button" class="btn btn-outline-primary"
             href="@Url.Action("CreaPizza", "Pizze")">
             Aggiungi Pizza 
             </a>
            </div>
        </div>

        

        @foreach(Pizze ElencoPizze in Model)
        {
        <!--il model è una lista di post, che abbiamo inserito in alto, ricordiamo che il controller passa a quel template una lista di post completa-->
                <!--Ricordiamo che dobbiamo inserire un ID per ogni elemento della lista perché è richiesto dal model, ogni id sarà quindi chiocciola nome presente nell foreach.id  -->
                <!--Cosa uguale sarà per tutti gli attributi quindi, nome, img e così via.-->
              <!--Margherita-->
              <div>@ElencoPizze.Id</div>
                    <div class= "col-6 ps-5 mt-3 col-xxl-6 ">
                        <div class="card mb-3 border border-dark shadow" style="max-width: 640px;">
                          <div class="row g-0">
                          <div class="col-md-4">
                          <img src="@ElencoPizze.ImagePizza" class="img-fluid rounded-start" alt="Pizza Margherita">
                          </div>
                          <div class="col-md-8">
                          <div class="card-body">
                          <h5 class="card-title">
                          @ElencoPizze.NamePizza
                          </h5> 
                          <p class="card-text">
                          @ElencoPizze.DescriptionPizza
                          </p>
                          <p class="card-text"><small class="text-muted">
                          @ElencoPizze.PricePizza</small>
                          </p>
                          <!--Inseriamo qui un bottone per collegarlo al model del trova pizze che farà vedere nello specifico la pizza che desideriamo-->
                         <!--Inseiriamo il tag "a" che serve per fare il link, questo punta al metodo dettagli, del contoller Pizze e ha un terzo parametro id che possiamo definrie-->
                          <!--fondamentalemtne quello è un oggetto quindi facciamo new id = post.id-->
                          <!--Si può utilizzare anche questo metodo /Pizza/Dettagli/chiocciolaElencoPizze.Id posso trovare altre informazioni di questo nella documentazione URL ACTION"-->
                          <p>
                          <a type="button" class="btn btn-outline-success" href="@Url.Action("Dettagli","Pizze", new {id = ElencoPizze.Id})">  Guarda <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16">
                                <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z"/>
                                    <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"/>
                                    </svg>
                              </a>
                          </p>
                          </div>
                          </div>
                          </div>
                        </div>
                    </div>
                    <!--In questo modo è possibile eliminare tutte le card realizzate prima, ogni volta che il foreach partirà andrò ad inserire in automatico tutti gli elementi presenti nella lista-->
             
     }
  }


  
   
          
</body>
</html>

